%% Initialization
clear;
close all;
addpath('utils');
addpath('solver');

%% Parameters
config = struct(...
    'block_size', 8, ...
    'extended_size', 32, ...
    'threshold', 1.5, ...
    'd', 1, ...
    'mask', 'knn', ...
    'smooth_filter_size', 3, ...
    'smooth_filter_sigma', 1, ...
    'gabor_filter_size', 17, ...
    'gabor_filter_sigma', 4, ...
    'small_object_size', 25, ...
    'binarize_sensitivity', 0.5, ...
    'prune_length', 10, ...
    'small_branch_size', 10, ...
    'bridge_length', 10, ...
    'bridge_d', 1, ...
    'remove_margin_length', 16 ...
);

%% Register all fingerprint images in 'image/regist'
% reg_dir = 'image/regist';
% image_files = dir(fullfile(reg_dir, '*.bmp'));
% for i = 1:length(image_files)
%     % images are named as '1_a.bmp', ...
%     % get the corresponding letter, such as 'a'
%     letter = image_files(i).name(3);
%     % register the image
%     register(letter, config);
% end

%% Get the minutiae of all input images
input_dir = 'image/input';
image_files = dir(fullfile(input_dir, '*.bmp'));
for i = 1:length(image_files)
    % images are named as '1.bmp', ...
    % get the corresponding letter, such as 'a'
    idx = image_files(i).name(1);
    % get the minutiae of the image
    get_minu_input(idx, config);
    % save the minutiae
end

%% Match the input images with the registered images
for i = 1:length(image_files)
    % images are named as '1.bmp', ...
    % get the corresponding letter, such as 'a'
    idx = image_files(i).name(1);
    % match the image
    letter = match_input(idx);
    disp([num2str(idx) ' -> ' letter]);
end
